We wanted to begin development with a nearly finalized PC. Many of the different combat systems will require access to various parts of the PC's rig, because of this it is necessary to make sure that the rig is as stable a development platform as possible. A placeholder would not do. <br>
On the first day of rig dev I had an epiphany about how the character setup portion of this project needed to move forward.  Creating a quality rig for the PC would not in itself suffice as a stable development platform. The evolving needs of our game systems will require a similarly modular rig. complex weapons and effects, character customization, enemy interactions; these are all systems that would be implemented later on in development, and continually modified throughout the post launch life of the game.  Not only will the rig need to be modified, but parts of the rig will need to remain stable and unchanged through large overhauls. To meet all of these needs, and ensure an efficient pipeline, development was begun on a proprietary rigging script. <br>
The process began with a focus on automating the setup of basic elements that are standardized across most rigs, IK/FK, splines, Control setup, reverse feet. As those scripts began to take shape we realized there was a much more powerful option. We have since begun work on a proprietary character setup library with the aim of compartmentalizing smaller tasks into global functions so that they can be referenced easily. <br>
The purpose of creating this setup pipeline has expanded past the needs for the PC.  As we expand our cast of characters we will continue to expand our character setup global function library.  An automated rigging script will be built for every character. the core of these scripts will be constructed from our pre existing library. Any special needs will be coded into this individual rigging script and compartmentalized into the global function library for future use.